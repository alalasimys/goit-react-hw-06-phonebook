{"version":3,"sources":["components/Filter/Filter.module.css","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","state","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","currentContacts","onSubmit","some","contact","toLowerCase","alert","this","className","styles","FormContainer","inputLabel","inputValue","onChange","type","pattern","title","required","Component","connect","contacts","dispatch","getCurrentContacts","allContacts","filter","normalizeFilterRequest","includes","onDeleteContact","ContactList","map","ContactListItem","DeleteBtn","onClick","target","App","createReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2e0c15a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputLabel\":\"Filter_inputLabel__KDsXr\",\"inputValue\":\"Filter_inputValue__23IJH\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addContact = createAction(\"contacts/Add\", (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction(\"contacts/Delete\");\nexport const changeFilter = createAction(\"contacts/Filter\");\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/phonebook/phonebook-actions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { currentContacts, onSubmit } = this.props;\n\n    currentContacts.some(\n      (contact) => name.toLowerCase() === contact.name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts.`)\n      : onSubmit(name, number);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.FormContainer}>\n        <label className={styles.inputLabel}>\n          Name\n          <input\n            className={styles.inputValue}\n            value={this.state.name}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.inputLabel}>\n          Number\n          <input\n            className={styles.inputValue}\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentContacts: state.contacts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/phonebook/phonebook-actions\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.ContactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.ContactListItem} key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={styles.DeleteBtn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst getCurrentContacts = (allContacts, filter) => {\n  const normalizeFilterRequest = filter.toLowerCase();\n\n  return allContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizeFilterRequest)\n  );\n};\n\nconst mapStateToProps = ({ contacts, filter }) => ({\n  contacts: getCurrentContacts(contacts, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styles from \"./Filter.module.css\";\nimport { changeFilter } from \"../../redux/phonebook/phonebook-actions\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.inputLabel}>\n    Find contacts by name\n    <input\n      className={styles.inputValue}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    ></input>\n  </label>\n);\n\nconst mapStateToProps = (state) => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","//Components\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\n//Styles\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <div className=\"Phonebook\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContact,\n  deleteContact,\n  changeFilter,\n} from \"../phonebook/phonebook-actions\";\n\nconst initialContacts = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst contacts = createReducer(initialContacts, {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\n\nconst contactsPersistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nexport const store = configureStore({\n  reducer: persistReducer(contactsPersistConfig, phonebookReducer),\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"ContactForm_FormContainer__3JfQi\",\"inputLabel\":\"ContactForm_inputLabel__3ilUb\",\"inputValue\":\"ContactForm_inputValue__wR2AA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__4TvGi\",\"ContactListItem\":\"ContactList_ContactListItem__1Gd3I\",\"DeleteBtn\":\"ContactList_DeleteBtn__24kLZ\"};"],"sourceRoot":""}